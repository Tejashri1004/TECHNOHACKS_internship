{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1aah5KeqBRowR5J30_GQoDbv1jCGKn6QC","authorship_tag":"ABX9TyNoEX9Vn/XbXMnUqipAnwJV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":10,"metadata":{"id":"BAR76JrXb2og","executionInfo":{"status":"ok","timestamp":1696779642309,"user_tz":-330,"elapsed":926,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"outputs":[],"source":["#import Libraries\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["# Import dataset\n","df=pd.read_csv(  \"/content/drive/MyDrive/titanic dataset.csv\"  )"],"metadata":{"id":"RTbooNp8cETx","executionInfo":{"status":"ok","timestamp":1696779643197,"user_tz":-330,"elapsed":20,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"t2_AYcoPctuv","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":20,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"c38d47ec-1833-4a8f-f3c5-ff07eaa5f319","colab":{"base_uri":"https://localhost:8080/","height":206}},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Pclass                                          Name     Sex  \\\n","0          892       3                              Kelly, Mr. James    male   \n","1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n","2          894       2                     Myles, Mr. Thomas Francis    male   \n","3          895       3                              Wirz, Mr. Albert    male   \n","4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n","\n","    Age  SibSp  Parch   Ticket     Fare Cabin Embarked  \n","0  34.5      0      0   330911   7.8292   NaN        Q  \n","1  47.0      1      0   363272   7.0000   NaN        S  \n","2  62.0      0      0   240276   9.6875   NaN        Q  \n","3  27.0      0      0   315154   8.6625   NaN        S  \n","4  22.0      1      1  3101298  12.2875   NaN        S  "],"text/html":["\n","  <div id=\"df-1eeaca14-90c5-4fb7-abc1-ea05b4fcd734\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1eeaca14-90c5-4fb7-abc1-ea05b4fcd734')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1eeaca14-90c5-4fb7-abc1-ea05b4fcd734 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1eeaca14-90c5-4fb7-abc1-ea05b4fcd734');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4d908dd1-1235-433a-8ff6-8416fe500848\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d908dd1-1235-433a-8ff6-8416fe500848')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4d908dd1-1235-433a-8ff6-8416fe500848 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"SUbBQozhneUj","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":19,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"d000eb83-208e-43e3-a75a-d720b13ef2a1"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Pclass                          Name     Sex   Age  SibSp  \\\n","413         1305       3            Spector, Mr. Woolf    male   NaN      0   \n","414         1306       1  Oliva y Ocana, Dona. Fermina  female  39.0      0   \n","415         1307       3  Saether, Mr. Simon Sivertsen    male  38.5      0   \n","416         1308       3           Ware, Mr. Frederick    male   NaN      0   \n","417         1309       3      Peter, Master. Michael J    male   NaN      1   \n","\n","     Parch              Ticket      Fare Cabin Embarked  \n","413      0           A.5. 3236    8.0500   NaN        S  \n","414      0            PC 17758  108.9000  C105        C  \n","415      0  SOTON/O.Q. 3101262    7.2500   NaN        S  \n","416      0              359309    8.0500   NaN        S  \n","417      1                2668   22.3583   NaN        C  "],"text/html":["\n","  <div id=\"df-3e0cdf2a-e994-4b53-adfe-438a8f6629c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>413</th>\n","      <td>1305</td>\n","      <td>3</td>\n","      <td>Spector, Mr. Woolf</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>A.5. 3236</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>414</th>\n","      <td>1306</td>\n","      <td>1</td>\n","      <td>Oliva y Ocana, Dona. Fermina</td>\n","      <td>female</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PC 17758</td>\n","      <td>108.9000</td>\n","      <td>C105</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>415</th>\n","      <td>1307</td>\n","      <td>3</td>\n","      <td>Saether, Mr. Simon Sivertsen</td>\n","      <td>male</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SOTON/O.Q. 3101262</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>1308</td>\n","      <td>3</td>\n","      <td>Ware, Mr. Frederick</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>359309</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>1309</td>\n","      <td>3</td>\n","      <td>Peter, Master. Michael J</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2668</td>\n","      <td>22.3583</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e0cdf2a-e994-4b53-adfe-438a8f6629c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e0cdf2a-e994-4b53-adfe-438a8f6629c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e0cdf2a-e994-4b53-adfe-438a8f6629c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd5fc891-9ac6-4286-8aca-b08075bde020\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd5fc891-9ac6-4286-8aca-b08075bde020')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd5fc891-9ac6-4286-8aca-b08075bde020 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df.shape"],"metadata":{"id":"Q2Unk-sMcxoh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":19,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"c0ca1fcc-aa9c-4877-ecb6-1127611268e7"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(418, 11)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Dropping unwanted columns\n","df.drop([\"PassengerId\",\"Ticket\"], axis=1, inplace=True)"],"metadata":{"id":"2XMGYlkhnKn0","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":17,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["#Checking the columns are deleted or not\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XcHl0Nn0mrRN","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":16,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"78a043ee-293f-426e-995a-15ce54feffd3"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 0 to 417\n","Data columns (total 9 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Pclass    418 non-null    int64  \n"," 1   Name      418 non-null    object \n"," 2   Sex       418 non-null    object \n"," 3   Age       332 non-null    float64\n"," 4   SibSp     418 non-null    int64  \n"," 5   Parch     418 non-null    int64  \n"," 6   Fare      417 non-null    float64\n"," 7   Cabin     91 non-null     object \n"," 8   Embarked  418 non-null    object \n","dtypes: float64(2), int64(3), object(4)\n","memory usage: 29.5+ KB\n"]}]},{"cell_type":"code","source":["#checking Duplicates\n","df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_MgxzgqYsLvy","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":16,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"917c0532-7e19-4fd7-87ee-785195b0d028"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["#checking null values\n","df.isnull().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KoE4CHyiowOo","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":15,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"394802ce-e0bf-4d65-e7d6-7a6dd960c4a7"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pclass        0\n","Name          0\n","Sex           0\n","Age          86\n","SibSp         0\n","Parch         0\n","Fare          1\n","Cabin       327\n","Embarked      0\n","dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["#Calculate the mean age of females\n","mean_female = df[df[\"Sex\"]==\"female\"]['Age'].mean()\n","mean_female"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KVJ1SMSJphgL","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":14,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"1444fd87-c047-4167-b9bd-da2091bab67f"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30.27236220472441"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["mean_male =df[df[\"Sex\"]==\"male\"]['Age'].mean()\n","mean_male"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vu1e-V0Gul_m","executionInfo":{"status":"ok","timestamp":1696779643198,"user_tz":-330,"elapsed":13,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"1df84077-085d-4f49-e8bd-56e4b1f5f2c2"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30.27273170731707"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["#Filling and removing null values"],"metadata":{"id":"TnPmELh_xfrs"}},{"cell_type":"code","source":["df.loc[df[\"Sex\"] == \"female\", \"Age\"] = df[df[\"Sex\"]==\"female\"][\"Age\"].fillna(mean_female)"],"metadata":{"id":"-Jn5JVxrxyqB","executionInfo":{"status":"ok","timestamp":1696779643199,"user_tz":-330,"elapsed":14,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["df.loc[df[\"Sex\"] == \"male\", \"Age\"] = df[df[\"Sex\"]==\"male\"][\"Age\"].fillna(mean_male)"],"metadata":{"id":"PEhz9pTJxRH-","executionInfo":{"status":"ok","timestamp":1696779643199,"user_tz":-330,"elapsed":13,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["df.drop(\"Cabin\",axis=1 ,inplace=True)"],"metadata":{"id":"pXMYhOfTzQY6","executionInfo":{"status":"ok","timestamp":1696779643199,"user_tz":-330,"elapsed":13,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["#checking filled values\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ss3gej34yQjV","executionInfo":{"status":"ok","timestamp":1696779656820,"user_tz":-330,"elapsed":632,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"6a9b485c-9fbd-44c9-b33e-fbe25b693d7a"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pclass      0\n","Name        0\n","Sex         0\n","Age         0\n","SibSp       0\n","Parch       0\n","Fare        1\n","Embarked    0\n","dtype: int64"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["sns.boxplot(data = df)"],"metadata":{"id":"Q7iL7vyTyYp3","colab":{"base_uri":"https://localhost:8080/","height":447},"executionInfo":{"status":"ok","timestamp":1696779794142,"user_tz":-330,"elapsed":930,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"44276d9a-24d4-492b-da81-1efe8b7c1829"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":29},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##Removing Outliers"],"metadata":{"id":"DO0F35d_9GU1"}},{"cell_type":"code","source":["no_col = df.select_dtypes(exclude=\"object\")"],"metadata":{"id":"8OBm0D4I9ZW4","executionInfo":{"status":"ok","timestamp":1696779897895,"user_tz":-330,"elapsed":2,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# Removing Outlier using 5 number summary\n","for col in no_col:\n","    Q1 = df[col].quantile(0.25)\n","    Q3 = df[col].quantile(0.75)\n","\n","    IQR = Q3-Q1"],"metadata":{"id":"pCWecHV88_IA","executionInfo":{"status":"ok","timestamp":1696779899315,"user_tz":-330,"elapsed":2,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["upper_limit = Q3 + (1.5*IQR)\n","lower_limit = Q1 - (1.5*IQR)"],"metadata":{"id":"EjYnG94o9L9R","executionInfo":{"status":"ok","timestamp":1696779923032,"user_tz":-330,"elapsed":8,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["df.loc[(df[col]>upper_limit),col] = upper_limit\n","df.loc[(df[col]<lower_limit),col] = lower_limit"],"metadata":{"id":"skwU01ml9uRf","executionInfo":{"status":"ok","timestamp":1696779939513,"user_tz":-330,"elapsed":606,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["for col in no_col:\n","    print(col)\n","    print(\"*\" * 100)\n","    plt.boxplot(x=df[col])\n","    plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"vtZe8-749yYI","executionInfo":{"status":"ok","timestamp":1696779967980,"user_tz":-330,"elapsed":1108,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"73a951c2-b3a0-4507-cda6-dc0ff9f8f20c"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Pclass\n","****************************************************************************************************\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Age\n","****************************************************************************************************\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["SibSp\n","****************************************************************************************************\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Parch\n","****************************************************************************************************\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Fare\n","****************************************************************************************************\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EpXaWuO59479","executionInfo":{"status":"ok","timestamp":1696780149332,"user_tz":-330,"elapsed":4,"user":{"displayName":"Tejashri Dahake","userId":"01086521012633258353"}},"outputId":"277707f3-488b-438a-ae1b-3d2e5126c067"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pclass      0\n","Name        0\n","Sex         0\n","Age         0\n","SibSp       0\n","Parch       0\n","Fare        1\n","Embarked    0\n","dtype: int64"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":[],"metadata":{"id":"9AyWsQDj-lxJ"},"execution_count":null,"outputs":[]}]}